{"version":3,"file":"static/js/642.d77d324d.chunk.js","mappings":"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","sources":["utils/addSpaceForAmount.js","utils/comparators.js","webpack://react-homework-template/./src/components/IncomesInMonthly/IncomesInMonthly.module.css?46f7","components/IncomesInMonthly/IncomesInMonthly.jsx","webpack://react-homework-template/./src/views/ReportView/ReportView.module.css?f1d9","utils/localization.js","utils/transactionTypes.js","webpack://react-homework-template/./src/components/FinancialReport/FinancialReport.module.css?8299","components/FinancialReport/FinancialReport.jsx","webpack://react-homework-template/./src/components/Chart/Chart.module.css?6073","utils/generateArr.js","components/Chart/Chart.jsx","components/ChartController/ChartController.jsx","views/ReportView/ReportView.jsx"],"sourcesContent":["export default function addSpaceForAmount(amount) {\n  const floatNum = amount.toFixed(2);\n  const parts = floatNum.toString().split('.');\n  const integerReverse = parts[0].split('').reverse();\n\n  const newString = integerReverse\n    .map((char, index) => {\n      if ((index + 1) % 3 === 0) {\n        return ` ${char}`;\n      }\n      return char;\n    })\n    .reverse()\n    .join('');\n\n  return `${newString}.${parts[1]}`;\n}\n","export const objectEntriesComparatorDesc = (arr1, arr2) => arr2[1] - arr1[1];\nexport const transactionDateComparatorDesc = (t1, t2) =>\n  new Date(t2.date) - new Date(t1.date);\n","// extracted by mini-css-extract-plugin\nexport default {\"balance_container\":\"IncomesInMonthly_balance_container__3vLMU\",\"outcomes\":\"IncomesInMonthly_outcomes__91Tw6\",\"line\":\"IncomesInMonthly_line__vVHoY\",\"incomes\":\"IncomesInMonthly_incomes__Jlap0\",\"title\":\"IncomesInMonthly_title__O7omz\",\"outcomes_div\":\"IncomesInMonthly_outcomes_div__sKuZz\",\"incomes_div\":\"IncomesInMonthly_incomes_div__ybNcm\"};","import s from './IncomesInMonthly.module.css'\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport {\n  currentPeriodDataSelector  \n} from 'redux/currentPeriod/period-selectors';\nimport { useState } from 'react';\nimport addSpaceForAmount from 'utils/addSpaceForAmount';\n\n\nfunction IncomesInMonthly() {\n  const [incomes, setIncomes] = useState('')\n  const [outcomes, setOutcomes] = useState('')\n  const currentPeriodData = useSelector(currentPeriodDataSelector);\n  useEffect(() => {\n    if (Object.keys(currentPeriodData).length > 0) {\n       const incomesData = addSpaceForAmount(currentPeriodData.incomes.incomeTotal)\n      const outcomesData = addSpaceForAmount(currentPeriodData.expenses.expenseTotal)\n      setIncomes(incomesData)\n      setOutcomes(outcomesData)\n    }\n}, [currentPeriodData]\n  )\n    \n\n    return (\n         <div className={s.balance_container}>\n      <div className={s.outcomes_div}>\n        <p className={s.title}>Expenses:</p>\n          <p className={s.outcomes}>{`- ${outcomes} грн.`}</p>\n        </div>\n        <div className={s.line}>\n        </div>\n      <div className={s.incomes_div}>\n        <p className={s.title}>Income:</p>\n          <p className={s.incomes}>{`+ ${incomes} грн.`}</p>\n      </div>\n    </div>\n    )\n}\nexport {IncomesInMonthly};","// extracted by mini-css-extract-plugin\nexport default {\"balance_line\":\"ReportView_balance_line__ftGMh\",\"module\":\"ReportView_module__QJG3C\",\"diagram\":\"ReportView_diagram__acWTW\",\"fon\":\"ReportView_fon__BeAO2\",\"img\":\"ReportView_img__D1N7S\"};","export const expensesCategory = [\n  {\n    backendName: 'Продукты',\n    category: 'Products',\n    imgPath: 'products-icon',\n    total: 0,\n  },\n  {\n    backendName: 'Алкоголь',\n    category: 'Alcohol',\n    imgPath: 'alcohol-icon',\n    total: 0,\n  },\n  {\n    backendName: 'Развлечения',\n    category: 'Entertainment',\n    imgPath: 'entertainment-icon',\n    total: 0,\n  },\n  {\n    backendName: 'Здоровье',\n    category: 'Health',\n    imgPath: 'health-icon',\n    total: 0,\n  },\n  {\n    backendName: 'Транспорт',\n    category: 'Transport',\n    imgPath: 'transport-icon',\n    total: 0,\n  },\n  {\n    backendName: 'Всё для дома',\n    category: 'Housing',\n    imgPath: 'housing-icon',\n    total: 0,\n  },\n  {\n    backendName: 'Техника',\n    category: 'Technique',\n    imgPath: 'technique-icon',\n    total: 0,\n  },\n  {\n    backendName: 'Коммуналка и связь',\n    category: 'Communal,\\n communication',\n    imgPath: 'communal-icon',\n    total: 0,\n  },\n  {\n    backendName: 'Спорт и хобби',\n    category: 'Sports,\\n hobbies',\n    imgPath: 'sports-icon',\n    total: 0,\n  },\n  {\n    backendName: 'Образование',\n    category: 'Education',\n    imgPath: 'education-icon',\n    total: 0,\n  },\n  {\n    backendName: 'Прочее',\n    category: 'Other',\n    imgPath: 'other-icon',\n    total: 0,\n  },\n];\n\nexport const incomeCategory = [\n  {\n    backendName: 'З/П',\n    category: 'Salary',\n    imgPath: 'salary-icon',\n    total: 0,\n  },\n  {\n    backendName: 'Доп. доход',\n    category: 'Additional income',\n    imgPath: 'add-income-icon',\n    total: 0,\n  },\n];\n","const transactionTypes = {\n  expenses: 'expenses',\n  incomes: 'incomes',\n};\n\nexport default transactionTypes;\n","// extracted by mini-css-extract-plugin\nexport default {\"reportSection\":\"FinancialReport_reportSection__v+P-d\",\"controls\":\"FinancialReport_controls__q4Gd5\",\"arrowIcon\":\"FinancialReport_arrowIcon__JSwR9\",\"reportTypeTitle\":\"FinancialReport_reportTypeTitle__yanZ0\",\"typeReportControlBtn\":\"FinancialReport_typeReportControlBtn__MK+XQ\",\"categoryList\":\"FinancialReport_categoryList__x9dE5\",\"categoryItem\":\"FinancialReport_categoryItem__Zyh6+\",\"categoryAmount\":\"FinancialReport_categoryAmount__m5ehG\",\"btnWrap\":\"FinancialReport_btnWrap__OIPL1\",\"categoryBtn\":\"FinancialReport_categoryBtn__XaBGf\",\"categoryBtnEnter\":\"FinancialReport_categoryBtnEnter__M4qmD FinancialReport_categoryBtn__XaBGf\",\"categoryBtnEnterActive\":\"FinancialReport_categoryBtnEnterActive__WDMnd FinancialReport_categoryBtn__XaBGf\",\"categoryBtnExit\":\"FinancialReport_categoryBtnExit__o+gLR FinancialReport_categoryBtn__XaBGf\",\"categoryBtnExitActive\":\"FinancialReport_categoryBtnExitActive__EvdKd FinancialReport_categoryBtn__XaBGf\",\"rectangle\":\"FinancialReport_rectangle__JYp6W\",\"rectangleEnterActive\":\"FinancialReport_rectangleEnterActive__fi2Zw FinancialReport_rectangle__JYp6W\",\"rectangleEnter\":\"FinancialReport_rectangleEnter__KlyH2 FinancialReport_rectangle__JYp6W\",\"rectangleExitActive\":\"FinancialReport_rectangleExitActive__FIe2T FinancialReport_rectangle__JYp6W\",\"rectangleExit\":\"FinancialReport_rectangleExit__vNR7R FinancialReport_rectangle__JYp6W\",\"categoryIcon\":\"FinancialReport_categoryIcon__8KQ4X\",\"category\":\"FinancialReport_category__j1-HW\",\"reportNotify\":\"FinancialReport_reportNotify__F+PGp\"};","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport { expensesCategory, incomeCategory } from 'utils/localization';\nimport {\n  currentPeriodDataSelector,\n  currentPeriodSelector,\n} from 'redux/currentPeriod/period-selectors';\nimport addSpaceForAmount from 'utils/addSpaceForAmount';\nimport transactionTypes from 'utils/transactionTypes';\nimport Sprite from '../../images/sprite.svg';\nimport s from './FinancialReport.module.css';\n\nexport default function FinancialReport({\n  selectedCategory,\n  setSelectedCategory,\n  selectedOperation,\n  setSelectedOperation,\n}) {\n  const { expenses, incomes } = transactionTypes;\n  const [operationData, setOperationData] = useState([]);\n\n  const currentPeriodData = useSelector(currentPeriodDataSelector);\n  const currentPeriod = useSelector(currentPeriodSelector);\n\n  function transformedString(string) {\n    if (!string.includes(' ')) {\n      return string;\n    }\n\n    return string.split(' ').map((str, index) => {\n      return <span key={index}>{str}</span>;\n    });\n  }\n\n  function changeCategory(newCategoryName) {\n    setSelectedCategory(newCategoryName);\n  }\n\n  function changeOperationType() {\n    selectedOperation === expenses\n      ? setSelectedOperation(incomes)\n      : setSelectedOperation(expenses);\n  }\n\n  useEffect(() => {\n    if (Object.keys(currentPeriodData).length > 0) {\n      const data =\n        selectedOperation === expenses\n          ? currentPeriodData?.expenses?.expensesData\n          : currentPeriodData?.incomes?.incomesData;\n\n      const arrayOfCategories =\n        selectedOperation === expenses ? expensesCategory : incomeCategory;\n\n      const arrayForHandle = Object.entries(data);\n\n      if (arrayForHandle.length === 0) {\n        setOperationData(null);\n        setSelectedCategory(null);\n      } else {\n        const dataForOperation = Object.entries(data).map(el => {\n          const obj = arrayOfCategories?.find(\n            ({ backendName }) => el[0] === backendName\n          );\n\n          return {\n            total: el[1].total,\n            category: obj.category,\n            imgPath: obj.imgPath,\n            backendName: obj.backendName,\n          };\n        });\n\n        setOperationData(dataForOperation);\n        setSelectedCategory(dataForOperation[0]?.backendName);\n      }\n    }\n  }, [expenses, selectedOperation, currentPeriodData, setSelectedCategory]);\n\n  return (\n    <section className={s.reportSection}>\n      <div className={s.controls}>\n        <button\n          type=\"button\"\n          className={s.typeReportControlBtn}\n          onClick={changeOperationType}\n        >\n          <svg className={s.arrowIcon}>\n            <use href={`${Sprite}#arrow-prev-icon`}></use>\n          </svg>\n        </button>\n        <h2 className={s.reportTypeTitle}>{selectedOperation}</h2>\n        <button\n          type=\"button\"\n          className={s.typeReportControlBtn}\n          onClick={changeOperationType}\n        >\n          <svg className={s.arrowIcon}>\n            <use href={`${Sprite}#arrow-next-icon`}></use>\n          </svg>\n        </button>\n      </div>\n\n      {operationData?.length > 0 ? (\n        <ul className={s.categoryList}>\n          {operationData?.map(\n            ({ total, imgPath, backendName, category }, index) => {\n              return (\n                <li key={index} className={s.categoryItem}>\n                  <span className={s.categoryAmount}>\n                    {addSpaceForAmount(total)}\n                  </span>\n\n                  <CSSTransition timeout={300} classNames={{ ...s }}>\n                    <div className={s.btnWrap}>\n                      <button\n                        type=\"button\"\n                        className={\n                          backendName === selectedCategory\n                            ? `${s.categoryBtnEnterActive}`\n                            : `${s.categoryBtnExitActive}`\n                        }\n                        onClick={() => changeCategory(backendName)}\n                        aria-label={`category ${category} button`}\n                      >\n                        <svg className={s.categoryIcon}>\n                          <use href={`${Sprite}#${imgPath}`}></use>\n                        </svg>\n                      </button>\n\n                      <div\n                        className={\n                          backendName === selectedCategory\n                            ? `${s.rectangleEnterActive}`\n                            : `${s.rectangleExitActive}`\n                        }\n                      ></div>\n                    </div>\n                  </CSSTransition>\n\n                  <p className={s.category}>{transformedString(category)}</p>\n                </li>\n              );\n            }\n          )}\n        </ul>\n      ) : (\n        <p className={s.reportNotify}>\n          Sorry, you don't have any {selectedOperation} for {currentPeriod} so I\n          can't build your report...\n        </p>\n      )}\n    </section>\n  );\n}\n\nFinancialReport.propTypes = {\n  selectedCategory: PropTypes.string,\n  setSelectedCategory: PropTypes.func,\n  selectedOperation: PropTypes.string,\n  setSelectedOperation: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"bar\":\"Chart_bar__9An4D\",\"barMob\":\"Chart_barMob__oYJzX\"};","export const generateArr = (value, length) => {\n  const arr = [];\n  for (let i = 0; i < length; i += 1) {\n    arr.push(value);\n  }\n  return arr;\n};\n","import React, { Fragment } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport ChartJS from 'chart.js/auto';\nimport addSpaceForAmount from '../../utils/addSpaceForAmount';\nimport Media from 'react-media';\nimport s from './Chart.module.css';\nimport { generateArr } from '../../utils/generateArr';\n\nChartJS.register(ChartDataLabels);\n\nconst Chart = ({ labels, data, maxData }) => {\n  // ------------TABLET/DESKTOP---------------------------------\n  const barChartData = {\n    labels: labels,\n\n    datasets: [\n      {\n        data: data,\n\n        borderColor: 'rgba(245, 246, 251, 1)',\n        backgroundColor: [\n          'rgba(255, 117, 29, 1)',\n          'rgba(255, 218, 192, 1)',\n          'rgba(255, 218, 192, 1)',\n        ],\n        borderRadius: '12',\n        fill: true,\n        borderJoinStyle: 'bevel',\n        borderWidth: '1',\n        showLine: false,\n        responsive: true,\n        barPercentage: 0.5,\n        barThickness: 38,\n      },\n    ],\n  };\n  // -------------------------MOBILE-------------------------\n  const barChartDataMobile = {\n    labels: labels,\n\n    datasets: [\n      {\n        data: generateArr(180, labels.length),\n\n        datalabels: {\n          display: function (context) {\n            const dataTrue = data.find(\n              (_, index) => index === context.dataIndex\n            );\n\n            return dataTrue > 800;\n          },\n\n          font: {\n            size: '12',\n          },\n          color: '#52555f',\n          labels: {\n            title: {\n              align: 'top',\n            },\n          },\n          anchor: 'end',\n          offset: 5,\n          barPercentage: 0.5,\n          categoryPercentage: 1,\n\n          formatter: (_, context) => {\n            const labels = context.chart.data.labels[context.dataIndex];\n\n            return labels;\n          },\n        },\n        barPercentage: 1,\n        barThickness: 15,\n\n        backgroundColor: ['transparent'],\n      },\n      {\n        data: data,\n\n        datalabels: {\n          layout: {\n            padding: {\n              top: 0,\n              right: 100,\n              bottom: 100,\n              left: 8,\n            },\n          },\n\n          font: {\n            size: '12',\n          },\n          color: '#52555f',\n          labels: {\n            title: {\n              align: 'top',\n            },\n          },\n          anchor: 'end',\n          offset: 5,\n          barPercentage: 0.5,\n          categoryPercentage: 1,\n\n          formatter: value => {\n            return `${addSpaceForAmount(Math.floor(value)).split('.')[0]} грн`;\n          },\n        },\n\n        borderColor: 'transparent',\n        backgroundColor: [\n          'rgba(255, 117, 29, 1)',\n          'rgba(255, 218, 192, 1)',\n          'rgba(255, 218, 192, 1)',\n        ],\n        borderRadius: '12',\n        fill: true,\n        borderJoinStyle: 'bevel',\n        borderWidth: 'none',\n        showLine: false,\n\n        barPercentage: 1,\n        barThickness: 15,\n      },\n    ],\n  };\n\n  const barChartMobil = (\n    <Bar\n      type=\"bar\"\n      width={100}\n      height={100}\n      options={{\n        layout: {\n          padding: { left: 30, right: 30 },\n        },\n        indexAxis: 'y',\n        plugins: {\n          legend: {\n            display: false,\n          },\n        },\n\n        scales: {\n          legend: {\n            display: false,\n            position: 'bottom',\n          },\n\n          x: {\n            stacked: true,\n            offset: true,\n            grid: { offset: true, lineWidth: 0, borderColor: 'transparent' },\n            ticks: {\n              display: false,\n            },\n          },\n          y: {\n            offset: true,\n            grid: { offset: true, lineWidth: 0, borderColor: 'transparent' },\n            stacked: true,\n            ticks: {\n              display: false,\n            },\n          },\n        },\n      }}\n      data={barChartDataMobile}\n    />\n  );\n  const barChart = (\n    <Bar\n      type=\"bar\"\n      width={100}\n      height={100}\n      options={{\n        plugins: {\n          legend: {\n            display: false,\n          },\n          datalabels: {\n            color: '#52555f',\n            anchor: 'end',\n            offset: 3,\n            align: 'end',\n            formatter: value =>\n              `${addSpaceForAmount(Math.floor(value)).split('.')[0]} грн`,\n          },\n        },\n\n        scales: {\n          legend: {\n            display: false,\n            position: 'bottom',\n          },\n\n          y: {\n            min: 0,\n            max: maxData,\n            stacked: true,\n            ticks: {\n              display: false,\n            },\n          },\n          x: {\n            min: 0,\n            max: maxData,\n            grid: { lineWidth: 0 },\n            stacked: true,\n          },\n        },\n      }}\n      data={barChartData}\n    />\n  );\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 767px)',\n        medium: '(min-width: 768px)',\n      }}\n    >\n      {matches => (\n        <Fragment>\n          {matches.small && <div className={s.barMob}>{barChartMobil}</div>}\n          {matches.medium && <div className={s.bar}>{barChart}</div>}\n        </Fragment>\n      )}\n    </Media>\n  );\n};\n\nexport default Chart;\n","import Chart from '../Chart/Chart';\nimport { objectEntriesComparatorDesc } from '../../utils/comparators';\n\nconst ChartController = ({ categoryObject }) => {\n  const arr = Object.entries(categoryObject);\n  arr.shift();\n  const sortArr = arr.sort(objectEntriesComparatorDesc);\n  const labels = sortArr.map(el => el[0]);\n  const data = sortArr.map(el => el[1]);\n  const maxData = Math.max(...data) * 1.2;\n\n  return (\n    <>\n      {sortArr.length !== 0 ? (\n        <Chart data={data} labels={labels} maxData={maxData} />\n      ) : null}\n    </>\n  );\n};\nexport default ChartController;\n","import { IncomesInMonthly } from 'components/IncomesInMonthly';\nimport s from './ReportView.module.css';\nimport FinancialReport from 'components/FinancialReport';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { currentPeriodDataSelector } from 'redux/currentPeriod/period-selectors';\nimport transactionTypes from 'utils/transactionTypes';\nimport ChartController from 'components/ChartController';\n\nexport default function ReportView() {\n  const { expenses } = transactionTypes;\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedOperation, setSelectedOperation] = useState(expenses);\n  const [diagramData, setDiagramData] = useState({});\n\n  const currentPeriodData = useSelector(currentPeriodDataSelector);\n\n  useEffect(() => {\n    if (Object.keys(currentPeriodData).length > 0) {\n      const currentOperationData =\n        currentPeriodData[selectedOperation][`${selectedOperation}Data`];\n\n      const arrayOfDescription = Object.entries(currentOperationData).find(\n        item => item[0] === selectedCategory\n      );\n\n      if (arrayOfDescription) {\n        setDiagramData(arrayOfDescription[1]);\n      } else {\n        setDiagramData({});\n      }\n    }\n  }, [currentPeriodData, selectedCategory, selectedOperation]);\n\n  // console.log(diagramData);\n\n  return (\n    <>\n      <div className={s.fon}></div>\n      <div className={s.img}></div>\n        <div className={s.balance_line}>\n          <IncomesInMonthly />\n        </div>\n        <div className={s.module}>\n          <FinancialReport\n            selectedCategory={selectedCategory}\n            setSelectedCategory={setSelectedCategory}\n            selectedOperation={selectedOperation}\n            setSelectedOperation={setSelectedOperation}\n          />\n        </div>\n\n        {!!Object.keys(diagramData)?.length && (\n          <div className={s.module}>\n            <ChartController categoryObject={diagramData} />\n          </div>\n        )}\n    </>\n  );\n}\n"],"names":["addSpaceForAmount","amount","parts","toFixed","toString","split","newString","reverse","map","char","index","join","objectEntriesComparatorDesc","arr1","arr2","transactionDateComparatorDesc","t1","t2","Date","date","IncomesInMonthly","useState","incomes","setIncomes","outcomes","setOutcomes","currentPeriodData","useSelector","currentPeriodDataSelector","useEffect","Object","keys","length","incomesData","incomeTotal","outcomesData","expenses","expenseTotal","className","s","expensesCategory","backendName","category","imgPath","total","incomeCategory","FinancialReport","selectedCategory","setSelectedCategory","selectedOperation","setSelectedOperation","transactionTypes","operationData","setOperationData","currentPeriod","currentPeriodSelector","changeOperationType","data","expensesData","arrayOfCategories","entries","dataForOperation","el","obj","find","type","onClick","href","Sprite","string","CSSTransition","timeout","classNames","includes","str","generateArr","value","arr","i","push","ChartJS","ChartDataLabels","labels","maxData","barChartData","datasets","borderColor","backgroundColor","borderRadius","fill","borderJoinStyle","borderWidth","showLine","responsive","barPercentage","barThickness","barChartDataMobile","datalabels","display","context","_","dataIndex","font","size","color","title","align","anchor","offset","categoryPercentage","formatter","chart","layout","padding","top","right","bottom","left","Math","floor","barChartMobil","width","height","options","indexAxis","plugins","legend","scales","position","x","stacked","grid","lineWidth","ticks","y","barChart","min","max","queries","small","medium","matches","Fragment","categoryObject","shift","sortArr","sort","ReportView","diagramData","setDiagramData","currentOperationData","arrayOfDescription","item"],"sourceRoot":""}